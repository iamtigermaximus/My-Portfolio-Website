{"version":3,"sources":["assets/CovidTrackerApp.jpg","assets/BudgetApp.jpg","assets/ToDoApp.jpg","assets/PortfolioParallax.jpg","assets/ResponsiveWebsite.jpg","assets/techfolio.png","components/Navbar.js","components/SocialFollow.js","components/Home.js","components/About.js","data/projects.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","exact","SocialFollow","url","bgColor","Home","About","href","ProjectsList","title","image","require","description","Projects","map","project","CardDeck","Card","bg","text","style","margin","Body","Img","variant","src","fluid","Title","Text","queries","columns","query","Contact","name","type","placeholder","value","App","Fragment","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0LAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,wGCI9BC,EAAS,WAClB,OACI,6BACI,yBAAKC,UAAU,OACX,wBAAIA,UAAU,QAAO,kBAAC,IAAD,CAASA,UAAU,YAAYC,GAAG,KAAlC,eACrB,yBAAKD,UAAU,YACX,kBAAC,IAAD,CAASA,UAAU,iBAAiBE,OAAK,EAACD,GAAG,KAA7C,QACA,kBAAC,IAAD,CAASD,UAAU,iBAAiBC,GAAG,UAAvC,SACA,kBAAC,IAAD,CAASD,UAAU,iBAAiBC,GAAG,aAAvC,YACA,kBAAC,IAAD,CAASD,UAAU,iBAAiBC,GAAG,YAAvC,e,QCTPE,EAAe,WACxB,OACI,6BACI,kBAAC,aAAD,CAAYH,UAAU,OAAOI,IAAI,qCAAqCC,QAAQ,SAC9E,kBAAC,aAAD,CAAYL,UAAU,OAAOI,IAAI,wCAAwCC,QAAQ,SACjF,kBAAC,aAAD,CAAYL,UAAU,OAAOI,IAAI,sBAAsBC,QAAQ,SAC/D,kBAAC,aAAD,CAAYL,UAAU,OAAOI,IAAI,uBAAuBC,QAAQ,WCP/DC,EAAO,WAChB,OACI,6BACI,6BACI,6BACI,yBAAKN,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBAGvB,yBAAKA,UAAU,cACX,kDACA,+GAAoF,6BAApF,0HAEJ,yBAAKA,UAAU,eACX,kBAAC,EAAD,WChBXO,EAAQ,WACjB,OACI,6BACI,6BACI,yCAEJ,yBAAKP,UAAU,mBACX,uBAAGA,UAAU,cAAb,yPAC0P,6BACtP,6BAFJ,0PAMN,6BACU,6BAPJ,uBAQc,uBAAGQ,KAAK,qCAAR,cARd,QCTHC,EAAe,CACxB,CACIC,MAAO,oBACPN,IAAK,uDACLO,MAAOC,EAAQ,IACfC,YAAa,4HAEjB,CACIH,MAAO,qBACPN,IAAK,gDACLO,MAAOC,EAAQ,IACfC,YAAa,oEAEjB,CACIH,MAAO,YACPN,IAAK,+CACLO,MAAOC,EAAQ,IACfC,YAAa,8DAEjB,CACIH,MAAO,qBACPN,IAAK,uDACLO,MAAOC,EAAQ,IACfC,YAAa,0CAEjB,CACIH,MAAO,4BACPN,IAAK,kDACLO,MAAOC,EAAQ,IACfC,YAAa,gCAEjB,CACIH,MAAO,uBACPN,IAAK,uDACLO,MAAOC,EAAQ,IACfC,YAAa,iE,wBC5BRC,EAAW,WACpB,IAAMA,EAAWL,EAAaM,KAAI,SAAAC,GAE9B,OACI,kBAACC,EAAA,EAAD,KACK,kBAACC,EAAA,EAAD,CACOC,GAAG,QACHC,KAAM,OACNpB,UAAU,cACVqB,MAAO,CAAEC,OAAQ,SACrB,kBAACJ,EAAA,EAAKK,KAAN,KACI,6BACI,kBAACL,EAAA,EAAKM,IAAN,CAAUC,QAAQ,MAAMC,IAAKV,EAAQL,MAAOgB,OAAK,EAAC3B,UAAU,gBAEpE,kBAACkB,EAAA,EAAKU,MAAN,KACI,uBAAGpB,KAAMQ,EAAQZ,KACjB,0BAAMJ,UAAU,2BAA2BgB,EAAQN,SAEvD,kBAACQ,EAAA,EAAKW,KAAN,KAAYb,EAAQH,mBAmBpC,OACI,yBAAKb,UAAU,iBACX,wCACA,kBAAC,IAAD,CAAS8B,QAhBH,CAAC,CACXC,QAAS,EACTC,MAAO,oBACR,CACKD,QAAS,EACTC,MAAO,oBAEf,CACID,QAAS,EACTC,MAAO,uBAQElB,KC9CJmB,EAAU,WACnB,OACI,6BACI,yBAAKjC,UAAU,WACX,yBAAKA,UAAU,iBACX,0CACA,uDACA,8BACI,2BAAOkC,KAAK,OAAOC,KAAK,OAAOnC,UAAU,iBAAiBoC,YAAY,SACtE,2BAAOF,KAAK,QAAQC,KAAK,OAAOnC,UAAU,iBAAiBoC,YAAY,UACvE,8BAAUF,KAAK,OAAOlC,UAAU,iBAAiBoC,YAAY,YAC7D,2BAAOD,KAAK,SAASE,MAAM,gBCYpCC,MAjBf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrC,OAAK,EAACsC,KAAK,IAAIC,UAAWnC,IACjC,kBAAC,IAAD,CAAOkC,KAAK,SAASC,UAAWlC,IAChC,kBAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAW3B,IACnC,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAWR,QCLxBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.44bcbbd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CovidTrackerApp.703849b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BudgetApp.5a78036a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ToDoApp.e3533152.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PortfolioParallax.a1138b6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ResponsiveWebsite.dc558c01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/techfolio.2b0e7766.png\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"nav\">\r\n                <h2 className=\"logo\"><NavLink className=\"logo-link\" to=\"/\">Tiger Code</NavLink></h2>\r\n                <div className=\"nav-menu\">\r\n                    <NavLink className=\"nav-menu__link\" exact to=\"/\">Home</NavLink>\r\n                    <NavLink className=\"nav-menu__link\" to=\"/about\">About</NavLink>\r\n                    <NavLink className=\"nav-menu__link\" to=\"/projects\">Projects</NavLink>\r\n                    <NavLink className=\"nav-menu__link\" to=\"/contact\">Contact</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\n\r\nexport const SocialFollow = () => {\r\n    return (\r\n        <div> \r\n            <SocialIcon className=\"icon\" url=\"https://github.com/iamtigermaximus\" bgColor=\"#FFF\" />\r\n            <SocialIcon className=\"icon\" url=\"https://instagram.com/iamtigermaximus\" bgColor=\"#FFF\" />\r\n            <SocialIcon className=\"icon\" url=\"https://twitter.com\" bgColor=\"#FFF\" />\r\n            <SocialIcon className=\"icon\" url=\"https://facebook.com\" bgColor=\"#FFF\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SocialFollow } from './SocialFollow'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <div className=\"main-content\">\r\n                        <div className=\"container\">\r\n                            <div className=\"profile-image\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"home-texts\">\r\n                        <h1>Hi, I'm Siegfred !</h1>\r\n                        <p>I'm a passionate web developer who wants to build and create meaningful projects.<br />Im interested in broadening my knowledge in the frontend side and to work on ambitous projects with positive people. </p>\r\n                    </div>\r\n                    <div className=\"social-icon\">\r\n                        <SocialFollow />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>About Me</h1>\r\n            </div>\r\n            <div className=\"about-container\">\r\n                <p className=\"about-page\">\r\n                    I'm a self-taught Web Developer currently based in Helsinki.I gained my knowledge through online courses (Udemy,freeCodeCamp,Codecademy) and watching various Youtube tutorials.I really enjoy the frontend spectrum- HTML, CSS, Javascript and React.<br />\r\n                    <br />\r\n          I'm constantly learning new languages and tools, and creating my own personal projects.\r\n          I like exploring new cultures,travelling and watching movies.I am also a professional Chef.\r\n          Take a look at my CV and my list of projects to know more about me.\r\n          <br />\r\n                    <br />\r\n          Please feel free to <a href=\"mailto:dante_sparda1925@yahoo.com\">contact me</a>.\r\n          </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const ProjectsList = [\r\n    {\r\n        title: 'Covid Tracker App',\r\n        url: 'https://iamtigermaximus.github.io/covid-tracker-app/',\r\n        image: require('../assets/CovidTrackerApp.jpg'),\r\n        description: 'A covid tracker app that returns statistics (with total confirmed cases, deaths, and recovered), and country statistics.',\r\n    },\r\n    {\r\n        title: 'Budget Tracker App',\r\n        url: 'https://iamtigermaximus.github.io/Budget-App/',\r\n        image: require('../assets/BudgetApp.jpg'),\r\n        description: 'A simple budget application thattracks your income and expenses.',\r\n    },\r\n    {\r\n        title: 'To do App',\r\n        url: 'https://iamtigermaximus.github.io/To-Do-App/',\r\n        image: require('../assets/ToDoApp.jpg'),\r\n        description: 'A to do list app that lets you create tasks and reminders.',\r\n    },\r\n    {\r\n        title: 'Portfolio Parallax',\r\n        url: 'https://iamtigermaximus.github.io/PortfolioParallax/',\r\n        image: require('../assets/PortfolioParallax.jpg'),\r\n        description: 'A personal portfolio and blog website.',\r\n    },\r\n    {\r\n        title: 'Simple Responsive Website',\r\n        url: 'https://iamtigermaximus.github.io/xypo-website/',\r\n        image: require('../assets/ResponsiveWebsite.jpg'),\r\n        description: 'A simple responsive website.',\r\n    },\r\n    {\r\n        title: 'My Portfolio Website',\r\n        url: 'https://iamtigermaximus.github.io/covid-tracker-app/',\r\n        image: require('../assets/techfolio.png'),\r\n        description: 'My portfolio website that shows my projects and information.',\r\n    },\r\n\r\n\r\n];","import React from 'react'\r\nimport { ProjectsList } from '../data/projects'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Columns from 'react-columns'\r\n\r\n\r\nexport const Projects = () => {\r\n    const Projects = ProjectsList.map(project => {\r\n\r\n        return (\r\n            <CardDeck>\r\n                 <Card\r\n                        bg=\"light\"\r\n                        text={\"blue\"}\r\n                        className=\"text-center\"\r\n                        style={{ margin: \"20px\" }}>\r\n                    <Card.Body>\r\n                        <div>\r\n                            <Card.Img variant=\"top\" src={project.image} fluid className=\"image-card\" />\r\n                        </div>\r\n                    <Card.Title>\r\n                        <a href={project.url}>\r\n                        <span className=\"contactText text-center\">{project.title}</span></a>\r\n                    </Card.Title>\r\n                    <Card.Text>{project.description}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardDeck>\r\n        )\r\n    })\r\n    var queries = [{\r\n        columns: 1,\r\n        query: 'min-width: 500px'\r\n    }, {\r\n            columns: 2,\r\n            query: 'min-width: 750px'\r\n        },\r\n    {\r\n        columns: 3,\r\n        query: 'min-width: 1000px'\r\n    }];\r\n\r\n\r\n    return (\r\n        <div className=\"projects-card\" >\r\n            <h1>Projects</h1>\r\n            <Columns queries={queries} >\r\n                {Projects}\r\n            </Columns>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"contact\">\r\n                <div className=\"ptext-contact\">\r\n                    <h1>Contact Me</h1>\r\n                    <p>Interested in Hiring Me?</p>\r\n                    <form>\r\n                        <input name=\"name\" type=\"text\" className=\"feedback-input\" placeholder=\"Name\" />\r\n                        <input name=\"email\" type=\"text\" className=\"feedback-input\" placeholder=\"Email\" />\r\n                        <textarea name=\"text\" className=\"feedback-input\" placeholder=\"Comment\"></textarea>\r\n                        <input type=\"submit\" value=\"SUBMIT\" />\r\n                    </form>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {Navbar} from './components/Navbar';\nimport { Home } from './components/Home';\nimport { About } from './components/About';\nimport { Projects } from './components/Projects';\nimport { Contact } from './components/Contact';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </div>\n    </React.Fragment>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}